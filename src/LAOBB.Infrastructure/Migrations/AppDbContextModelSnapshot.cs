// <auto-generated />
using System;
using LAOBB.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LAOBB.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LAOBB.Domain.Entities.Alliance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AllianceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AllianceTag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Founded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("FounderId")
                        .HasColumnType("uuid");

                    b.Property<string>("FounderName")
                        .HasColumnType("text");

                    b.Property<int?>("NumPlayers")
                        .HasColumnType("integer");

                    b.Property<string>("SbiAllianceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SbiFounderId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("FounderId");

                    b.HasIndex("SbiAllianceId")
                        .IsUnique();

                    b.ToTable("Alliances");
                });

            modelBuilder.Entity("LAOBB.Domain.Entities.AllianceBattle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AllianceId")
                        .HasColumnType("uuid");

                    b.Property<string>("AllianceTag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("BattleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Deaths")
                        .HasColumnType("integer");

                    b.Property<int?>("KillFame")
                        .HasColumnType("integer");

                    b.Property<int?>("Kills")
                        .HasColumnType("integer");

                    b.Property<string>("SbiAllianceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AllianceId");

                    b.HasIndex("BattleId");

                    b.ToTable("AllianceBattles");
                });

            modelBuilder.Entity("LAOBB.Domain.Entities.Battle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("BattleTimeout")
                        .HasColumnType("integer");

                    b.Property<string>("ClusterName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EndTime")
                        .HasColumnType("text");

                    b.Property<int?>("SbiId")
                        .HasColumnType("integer");

                    b.Property<string>("StartTime")
                        .HasColumnType("text");

                    b.Property<string>("Timeout")
                        .HasColumnType("text");

                    b.Property<int?>("TotalFame")
                        .HasColumnType("integer");

                    b.Property<int?>("TotalKills")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("SbiId");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("LAOBB.Domain.Entities.Guild", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AllianceId")
                        .HasColumnType("uuid");

                    b.Property<string>("AllianceName")
                        .HasColumnType("text");

                    b.Property<string>("AllianceTag")
                        .HasColumnType("text");

                    b.Property<int?>("AttacksWon")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("DeathFame")
                        .HasColumnType("bigint");

                    b.Property<int?>("DefensesWon")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Founded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("FounderId")
                        .HasColumnType("uuid");

                    b.Property<string>("FounderName")
                        .HasColumnType("text");

                    b.Property<long?>("KillFame")
                        .HasColumnType("bigint");

                    b.Property<string>("Logo")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SbiAllianceId")
                        .HasColumnType("text");

                    b.Property<string>("SbiFounderId")
                        .HasColumnType("text");

                    b.Property<string>("SbiId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AllianceId");

                    b.HasIndex("FounderId");

                    b.HasIndex("SbiId")
                        .IsUnique();

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("LAOBB.Domain.Entities.GuildBattle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AllianceId")
                        .HasColumnType("uuid");

                    b.Property<string>("AllianceTag")
                        .HasColumnType("text");

                    b.Property<Guid>("BattleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Deaths")
                        .HasColumnType("integer");

                    b.Property<Guid>("GuildId")
                        .HasColumnType("uuid");

                    b.Property<int?>("KillFame")
                        .HasColumnType("integer");

                    b.Property<int?>("Kills")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SbiAllianceId")
                        .HasColumnType("text");

                    b.Property<string>("SbiGuildId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AllianceId");

                    b.HasIndex("BattleId");

                    b.HasIndex("GuildId");

                    b.ToTable("GuildBattles");
                });

            modelBuilder.Entity("LAOBB.Domain.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AllianceId")
                        .HasColumnType("uuid");

                    b.Property<string>("AllianceName")
                        .HasColumnType("text");

                    b.Property<string>("AllianceTag")
                        .HasColumnType("text");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<string>("AvatarRing")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DeathFame")
                        .HasColumnType("integer");

                    b.Property<double?>("FameRatio")
                        .HasColumnType("double precision");

                    b.Property<Guid?>("GuildId")
                        .HasColumnType("uuid");

                    b.Property<string>("GuildName")
                        .HasColumnType("text");

                    b.Property<int?>("KillFame")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SbiAllianceId")
                        .HasColumnType("text");

                    b.Property<string>("SbiGuildId")
                        .HasColumnType("text");

                    b.Property<string>("SbiId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AllianceId");

                    b.HasIndex("GuildId");

                    b.HasIndex("SbiId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("LAOBB.Domain.Entities.PlayerBattle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AllianceId")
                        .HasColumnType("uuid");

                    b.Property<string>("AllianceTag")
                        .HasColumnType("text");

                    b.Property<Guid>("BattleId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Deaths")
                        .HasColumnType("integer");

                    b.Property<Guid?>("GuildId")
                        .HasColumnType("uuid");

                    b.Property<string>("GuildName")
                        .HasColumnType("text");

                    b.Property<int?>("KillFame")
                        .HasColumnType("integer");

                    b.Property<int?>("Kills")
                        .HasColumnType("integer");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uuid");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SbiAllianceId")
                        .HasColumnType("text");

                    b.Property<string>("SbiGuildId")
                        .HasColumnType("text");

                    b.Property<string>("SbiPlayerId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AllianceId");

                    b.HasIndex("BattleId");

                    b.HasIndex("GuildId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerBattles");
                });

            modelBuilder.Entity("LAOBB.Domain.Entities.Alliance", b =>
                {
                    b.HasOne("LAOBB.Domain.Entities.Player", "Founder")
                        .WithMany()
                        .HasForeignKey("FounderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Founder");
                });

            modelBuilder.Entity("LAOBB.Domain.Entities.AllianceBattle", b =>
                {
                    b.HasOne("LAOBB.Domain.Entities.Alliance", "Alliance")
                        .WithMany()
                        .HasForeignKey("AllianceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LAOBB.Domain.Entities.Battle", "Battle")
                        .WithMany("AllianceBattles")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alliance");

                    b.Navigation("Battle");
                });

            modelBuilder.Entity("LAOBB.Domain.Entities.Guild", b =>
                {
                    b.HasOne("LAOBB.Domain.Entities.Alliance", "Alliance")
                        .WithMany("AllianceGuilds")
                        .HasForeignKey("AllianceId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("LAOBB.Domain.Entities.Player", "Founder")
                        .WithMany()
                        .HasForeignKey("FounderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Alliance");

                    b.Navigation("Founder");
                });

            modelBuilder.Entity("LAOBB.Domain.Entities.GuildBattle", b =>
                {
                    b.HasOne("LAOBB.Domain.Entities.Alliance", "Alliance")
                        .WithMany()
                        .HasForeignKey("AllianceId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("LAOBB.Domain.Entities.Battle", "Battle")
                        .WithMany("GuildBattles")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LAOBB.Domain.Entities.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alliance");

                    b.Navigation("Battle");

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("LAOBB.Domain.Entities.Player", b =>
                {
                    b.HasOne("LAOBB.Domain.Entities.Alliance", "Alliance")
                        .WithMany()
                        .HasForeignKey("AllianceId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("LAOBB.Domain.Entities.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Alliance");

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("LAOBB.Domain.Entities.PlayerBattle", b =>
                {
                    b.HasOne("LAOBB.Domain.Entities.Alliance", "Alliance")
                        .WithMany()
                        .HasForeignKey("AllianceId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("LAOBB.Domain.Entities.Battle", "Battle")
                        .WithMany("PlayerBattles")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LAOBB.Domain.Entities.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("LAOBB.Domain.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alliance");

                    b.Navigation("Battle");

                    b.Navigation("Guild");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("LAOBB.Domain.Entities.Alliance", b =>
                {
                    b.Navigation("AllianceGuilds");
                });

            modelBuilder.Entity("LAOBB.Domain.Entities.Battle", b =>
                {
                    b.Navigation("AllianceBattles");

                    b.Navigation("GuildBattles");

                    b.Navigation("PlayerBattles");
                });
#pragma warning restore 612, 618
        }
    }
}
